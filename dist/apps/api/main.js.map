{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///./src/user/user.controller.ts","webpack:///./src/user/user.service.ts","webpack:///./src/utils/constants/mock/user.ts","webpack:///./src/user/dto/create-user.dto.ts","webpack:///./src/user/dto/update-user.dto.ts","webpack:///external commonjs \"@nestjs/mapped-types\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserController } from '../user/user.controller';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController, UserController],\n  providers: [AppService, UserService],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n\n  @Get('/yo-bro')\n  getYoBro() {\n    return { message: 'Yo Bro' };\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\ntype User = { id: number | string; name: string };\n\nconst mockUsers: User[] = [\n  { id: 1, name: 'yoko' },\n  { id: 2, name: 'hoko' },\n  { id: 3, name: 'goko' },\n  { id: 4, name: 'boko' },\n  { id: 5, name: 'shoko' },\n];\n\n@Injectable()\nexport class AppService {\n  getData(): { users: User[] } {\n    return { users: mockUsers };\n  }\n}\n","import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(+id);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { mockUsers } from '../utils/constants/mock/user';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  create(createUserDto: CreateUserDto) {\n    // TODO This mockId thing doesn't work better switch to uuid\n    const maxId = mockUsers.map((user): number => {\n      const { id } = user;\n      if (typeof id === 'string') return parseInt(id);\n      return id;\n    });\n    Math.max();\n    const newUser: User = {\n      id: Math.max(...maxId) + 1,\n      name: createUserDto.name,\n    };\n    mockUsers.push(newUser);\n    return { users: newUser };\n  }\n\n  findAll() {\n    return { users: mockUsers };\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n","// import { User } from \"apps/api/src/user/entities/user.entity\";\nimport { User } from '../../../user/entities/user.entity';\n\nexport const mockUsers: User[] = [\n  { id: 1, name: 'yoko' },\n  { id: 2, name: 'hoko' },\n  { id: 3, name: 'goko' },\n  { id: 4, name: 'boko' },\n  { id: 5, name: 'shoko' },\n];\n","export class CreateUserDto {\n  name: string;\n  id: string;\n}\n","import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n","module.exports = require(\"@nestjs/mapped-types\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.enableCors();\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `ðŸš€ Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}